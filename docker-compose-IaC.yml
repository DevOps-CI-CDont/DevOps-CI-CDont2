# remember to run "docker build -t cicdont/frontend ." and
# "docker build -t cicdont/backend ." in root directories minitwit-front 
# and minitwit-backend, respectively, before running this file with command
# "docker-compose up"
networks:
    elk:

services:
  frontend:
    image: registry.digitalocean.com/cicdont-images/frontend
    container_name: frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://cicdont.live:8080
  backend:
    image: registry.digitalocean.com/cicdont-images/backend
    container_name: api
    restart: always
    ports:
      - "8080:8080"
      - "8081:8081"
    env_file:
      - ./.env
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/config.json
    command: --interval 60 # seconds between checks
  
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
  
  grafana:
    image: grafana/grafana:9.3.0
    ports:
      - "4000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
    volumes:
      - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
  
  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.2.0"
    environment:
        - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
        - "discovery.type=single-node"
    volumes:
        - elk_elasticsearch_data:/usr/share/elasticsearch/data
    networks:
        - elk

  kibana:
    image: "docker.elastic.co/kibana/kibana:7.2.0"
    environment:
        elasticsearch.hosts: '["http://elasticsearch:9200"]'
    networks:
        - elk

  filebeat:
    image: "docker.elastic.co/beats/filebeat:7.2.0"
    user: root
    volumes:
        - ${ELK_DIR}/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
        - /var/lib/docker:/var/lib/docker:ro
        - /var/run/docker.sock:/var/run/docker.sock
    networks:
        - elk
          
  nginx: 
    image: nginx
    ports:
      - 9200:9200
      - 5601:5601
      - 8881:8881
      - 8882:8882
    networks:
      - elk
    volumes:
      - type: bind
        source: ./nginx.conf
        target: /etc/nginx/nginx.conf
      - type: bind
        source: ${ELK_DIR}/.htpasswd
        target: /etc/nginx/.htpasswd

volumes:
  elk_elasticsearch_data:
  prometheus_data: {}
  grafana:
